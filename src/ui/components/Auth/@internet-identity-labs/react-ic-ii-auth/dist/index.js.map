{"version":3,"file":"index.js","sources":["../src/modal.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react'\n\ninterface AuthIframeProps\n  extends React.DetailedHTMLProps<\n    React.IframeHTMLAttributes<HTMLIFrameElement>,\n    HTMLIFrameElement\n  > {\n  src: string\n  onLoad: () => void\n}\n\nexport const AuthIframe: React.FC<AuthIframeProps> = ({\n  src,\n  onLoad,\n  title = 'idpWindow',\n  name = 'idpWindow',\n  width = '100%',\n  height = '100%',\n  allow = 'publickey-credentials-get',\n  ...props\n}) => {\n  return (\n    <iframe\n      title={title}\n      name={name}\n      width={width}\n      height={height}\n      allow={allow}\n      src={src}\n      onLoad={onLoad}\n      {...props}\n    />\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport { Identity } from '@dfinity/agent'\nimport { AuthClient, AuthClientLoginOptions } from '@dfinity/auth-client'\nimport React, { useContext } from 'react'\n\nexport * from './modal'\n\ninterface InternetIdentityContextState {\n  error: string | null\n  authClient: AuthClient | null\n  identityProvider: string\n  isAuthenticated: boolean\n  identity: Identity | null\n  authenticate: () => Promise<void>\n  signout: () => void\n}\n\nexport const InternetIdentityContext =\n  React.createContext<InternetIdentityContextState>({\n    error: null,\n    authClient: null,\n    identityProvider: '',\n    isAuthenticated: false,\n    identity: null,\n    authenticate: () => new Promise(() => null),\n    signout: () => null\n  })\n\ninterface AuthClientOptions extends Omit<AuthClientLoginOptions, 'onSuccess'> {\n  onSuccess?: (identity: Identity) => void\n}\n\ninterface UseInternetIdentityProps {\n  authClientOptions?: AuthClientOptions\n}\n\nconst useICIIAuth = ({\n  authClientOptions: { onError, onSuccess, ...authClientOptions } = {}\n}: UseInternetIdentityProps = {}) => {\n  const [authClient, setAuthClient] = React.useState<AuthClient | null>(null)\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false)\n  const [error, setError] = React.useState<string | null>(null)\n\n  const identityProvider = (\n    authClientOptions.identityProvider || 'https://identity.ic0.app/#authorize'\n  ).toString()\n\n  const createAuthClient = React.useCallback(async () => {\n    const authClient = await AuthClient.create()\n    setAuthClient(authClient)\n  }, [])\n\n  React.useEffect(() => {\n    createAuthClient()\n  }, [createAuthClient])\n\n  const setAuthStatus = React.useCallback(async (authClient) => {\n    if (authClient) {\n      const isAuthenticated = await authClient.isAuthenticated()\n      return setIsAuthenticated(isAuthenticated)\n    }\n    return setIsAuthenticated(false)\n  }, [])\n\n  React.useEffect(() => {\n    authClient && setAuthStatus(authClient)\n  }, [authClient, setAuthStatus])\n\n  const handleOnSuccess = React.useCallback(\n    (authClient) => {\n      setIsAuthenticated(true)\n      onSuccess && onSuccess(authClient.getIdentity())\n    },\n    [onSuccess]\n  )\n\n  const handleOnError = React.useCallback(\n    (error) => {\n      setError(error)\n      onError && onError(error)\n    },\n    [onError]\n  )\n\n  const authenticate = React.useCallback(async () => {\n    if (authClient) {\n      await authClient.login({\n        onSuccess: () => handleOnSuccess(authClient),\n        onError: handleOnError,\n        identityProvider,\n        ...authClientOptions\n      })\n    }\n  }, [\n    authClient,\n    authClientOptions,\n    handleOnError,\n    handleOnSuccess,\n    identityProvider\n  ])\n\n  const signout = React.useCallback(async () => {\n    if (authClient) {\n      await authClient.logout()\n      setIsAuthenticated(false)\n    }\n  }, [authClient])\n\n  return {\n    error,\n    authClient,\n    identityProvider,\n    isAuthenticated,\n    identity: authClient ? authClient.getIdentity() : null,\n    authenticate,\n    signout\n  }\n}\n\ninterface InternetIdentityProviderProps {\n  authClientOptions?: AuthClientOptions\n}\n\nexport const InternetIdentityProvider: React.FC<InternetIdentityProviderProps> =\n  ({ children, authClientOptions = {} }) => {\n    const authContext = useICIIAuth({ authClientOptions })\n    return (\n      <InternetIdentityContext.Provider value={authContext}>\n        {children}\n      </InternetIdentityContext.Provider>\n    )\n  }\n\nexport const useInternetIdentity = () => {\n  return useContext(InternetIdentityContext)\n}\n"],"names":["AuthIframe","src","onLoad","title","name","width","height","allow","props","React","InternetIdentityContext","createContext","error","authClient","identityProvider","isAuthenticated","identity","authenticate","Promise","signout","useICIIAuth","authClientOptions","onError","onSuccess","useState","setAuthClient","setIsAuthenticated","setError","toString","createAuthClient","useCallback","AuthClient","create","useEffect","setAuthStatus","handleOnSuccess","getIdentity","handleOnError","login","logout","InternetIdentityProvider","children","authContext","Provider","value","useInternetIdentity","useContext"],"mappings":"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"}